{"version":3,"sources":["components/layout/loading6.gif","context/auth/authContext.jsx","context/contact/contactContext.jsx","components/layout/Navbar.jsx","components/contacts/ContactItem.jsx","components/layout/Spinner.jsx","components/contacts/Contacts.jsx","components/contacts/ContactForm.jsx","components/contacts/ContactFilter.jsx","components/pages/Home.jsx","components/pages/About.jsx","context/alert/alertContext.jsx","components/auth/Register.jsx","components/auth/Login.jsx","components/layout/Alerts.jsx","components/routing/PrivateRoute.jsx","context/contact/contactReducer.jsx","context/types.jsx","context/contact/ContactState.jsx","context/auth/authReducer.jsx","utils/setAuthToken.jsx","context/auth/AuthState.jsx","context/alert/alertReducer.jsx","context/alert/AlertState.jsx","App.jsx","index.jsx"],"names":["module","exports","authContext","createContext","ContactContext","Navbar","props","useContext","AuthContext","contactContext","isAuthenticated","logout","user","clearContacts","authLinks","name","onClick","href","className","guestLinks","to","title","icon","defaultProps","ContactItem","contact","deleteContact","setCurrent","clearCurrent","_id","email","phone","type","String","fromCharCode","style","float","charAt","toUpperCase","slice","Spinner","src","spinner","width","margin","display","alt","Contacts","contacts","filtered","getContacts","loading","useEffect","nodeRef","useRef","length","TransitionGroup","map","CSSTransition","key","timeout","classNames","ContactForm","addContact","updateContact","current","setContact","useState","onChange","e","target","value","onSubmit","preventDefault","placeholder","checked","ContactFilter","filterContacts","clearFilter","text","ref","Home","loadUser","About","alertContext","Register","AlertContext","setAlert","register","error","clearErrors","history","push","password","password2","setUser","console","log","htmlFor","required","minLength","Login","login","Alerts","alerts","alert","id","msg","PrivateRoute","Component","component","rest","render","state","action","payload","element","filter","regex","RegExp","match","ContactState","useReducer","ContactReducer","dispatch","a","config","headers","axios","post","res","data","response","get","put","delete","Provider","children","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","authReducer","formData","AlertState","alertReducer","uuid","setTimeout","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.435b683a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading6.4c140210.gif\";","import { createContext } from 'react'\r\n\r\nconst authContext = createContext()\r\n\r\nexport default authContext\r\n","import { createContext } from \"react\";\r\n\r\nconst ContactContext = createContext();\r\n\r\nexport default ContactContext;\r\n","import React, { Fragment, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport ContactContext from '../../context/contact/contactContext'\r\n\r\nconst Navbar = (props) => {\r\n  const authContext = useContext(AuthContext)\r\n  const contactContext = useContext(ContactContext)\r\n\r\n  const { isAuthenticated, logout, user } = authContext\r\n  const { clearContacts } = contactContext\r\n\r\n  const onLogout = () => {\r\n    logout()\r\n    clearContacts()\r\n  }\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <li>Hello {user && user.name}</li>\r\n      <li>\r\n        <a onClick={onLogout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  )\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </Fragment>\r\n  )\r\n\r\n  const { title, icon } = props\r\n  return (\r\n    <div className=\"navbar bg-primary\">\r\n      <h1>\r\n        <i className={icon}></i> {title}\r\n      </h1>\r\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Contact Keeper V2',\r\n  icon: 'fas fa-id-card-alt',\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContactContext from '../../context/contact/contactContext'\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  const { deleteContact, setCurrent, clearCurrent } = useContext(ContactContext)\r\n\r\n  const { _id, name, email, phone, type } = contact\r\n\r\n  const onDelete = () => {\r\n    deleteContact(_id)\r\n    clearCurrent()\r\n  }\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name} {String.fromCharCode(160)}\r\n        <span style={{ float: 'right' }} className={'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary')}>\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        {email && (\r\n          <li>\r\n            <i className=\"fas fa-envelope-open\"></i> {email}\r\n          </li>\r\n        )}\r\n        {phone && (\r\n          <li>\r\n            <i className=\"fas fa-phone\"></i> {phone}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <p>\r\n        <button className=\"btn btn-dark btn-sm\" onClick={() => setCurrent(contact)}>\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ContactItem\r\n","import React, { Fragment } from 'react'\r\nimport spinner from './loading6.gif'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block' }} alt=\"Loading...\" />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Fragment, useContext, useRef, useEffect } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ContactContext from '../../context/contact/contactContext'\r\nimport ContactItem from './ContactItem'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst Contacts = () => {\r\n  const { contacts, filtered, getContacts, loading } = useContext(ContactContext)\r\n\r\n  useEffect(() => {\r\n    getContacts()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const nodeRef = useRef(null)\r\n\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h4>Please add a Contact</h4>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {(contacts !== null) & !loading ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <CSSTransition nodeRef={nodeRef} key={contact._id} timeout={500} classNames=\"item\">\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition nodeRef={nodeRef} key={contact._id} timeout={500} classNames=\"item\">\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Contacts\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport ContactContext from '../../context/contact/contactContext'\r\n\r\nconst ContactForm = () => {\r\n  const { addContact, updateContact, current, clearCurrent } = useContext(ContactContext)\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current)\r\n    } else {\r\n      setContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal',\r\n      })\r\n    }\r\n  }, [current])\r\n\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    type: 'personal',\r\n  })\r\n\r\n  const { name, email, phone, type } = contact\r\n\r\n  const onChange = (e) => {\r\n    setContact({ ...contact, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (current === null) {\r\n      addContact(contact)\r\n    } else {\r\n      updateContact(contact)\r\n    }\r\n\r\n    setContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      type: 'personal',\r\n    })\r\n  }\r\n\r\n  const clearAll = () => {\r\n    clearCurrent()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\r\n      <input type=\"text\" name=\"name\" value={name} placeholder=\"Name\" onChange={onChange} />\r\n      <input type=\"email\" name=\"email\" value={email} placeholder=\"Email\" onChange={onChange} />\r\n      <input type=\"text\" name=\"phone\" value={phone} placeholder=\"Phone\" onChange={onChange} />\r\n      <h5>Contact Type</h5>\r\n      <input type=\"radio\" name=\"type\" value=\"personal\" onChange={onChange} checked={type === 'personal'} /> Personal {String.fromCharCode(160)}\r\n      <input type=\"radio\" name=\"type\" value=\"professional\" onChange={onChange} checked={type === 'professional'} /> Professional\r\n      <div>\r\n        <input type=\"submit\" value={current ? 'Update Contact' : 'Add Contact'} className=\"btn btn-primary btn-block\" />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React, { useContext, useRef, useEffect } from 'react'\r\nimport ContactContext from '../../context/contact/contactContext'\r\n\r\nconst ContactFilter = () => {\r\n  const contactContext = useContext(ContactContext)\r\n  const { filterContacts, clearFilter, filtered } = contactContext\r\n\r\n  const text = useRef('')\r\n\r\n  useEffect(() => {\r\n    if (filtered === null) {\r\n      text.current.value = ''\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    if (text.current.value !== '') {\r\n      filterContacts(e.target.value)\r\n    } else {\r\n      clearFilter()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input type=\"text\" ref={text} placeholder=\"Filter Contacts...\" onChange={onChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactFilter\r\n","import React, { useContext, useEffect } from 'react'\r\nimport Contacts from '../contacts/Contacts'\r\nimport ContactForm from '../contacts/ContactForm'\r\nimport ContactFilter from '../contacts/ContactFilter'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\nconst Home = () => {\r\n  const authContext = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    authContext.loadUser()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"grid-2\">\r\n      <div>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <ContactFilter />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About This App</h1>\r\n      <p className='my-1'>This is a full stack React app for Keeping contacts</p>\r\n      <p className='bg-dark p'>\r\n        <strong>Version: </strong>1.0.0\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { createContext } from 'react'\r\n\r\nconst alertContext = createContext()\r\n\r\nexport default alertContext\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\nconst Register = (props) => {\r\n  const alertContext = useContext(AlertContext)\r\n  const authContext = useContext(AuthContext)\r\n\r\n  const { setAlert } = alertContext\r\n  const { register, error, clearErrors, isAuthenticated } = authContext\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push('/')\r\n    }\r\n\r\n    if (error === 'User already exists') {\r\n      setAlert(error, 'danger')\r\n      clearErrors()\r\n    }\r\n    //  eslint-disable-next-line\r\n  }, [error, isAuthenticated])\r\n\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  })\r\n\r\n  const { name, email, password, password2 } = user\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (name === '' || email === '' || password === '') {\r\n      setAlert('Please enter all fields', 'danger')\r\n    } else if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger')\r\n    } else {\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n      })\r\n      console.log('Register submit')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Register</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" name=\"name\" value={name} onChange={onChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={onChange} required minLength=\"6\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password2\">Confirm Password</label>\r\n          <input type=\"password\" name=\"password2\" value={password2} onChange={onChange} required minLength=\"6\" />\r\n        </div>\r\n        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\nconst Login = (props) => {\r\n  const alertContext = useContext(AlertContext)\r\n  const authContext = useContext(AuthContext)\r\n\r\n  const { setAlert } = alertContext\r\n  const { login, error, clearErrors, isAuthenticated } = authContext\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push('/')\r\n    }\r\n\r\n    if (error === 'Invalid Credentials') {\r\n      setAlert(error, 'danger')\r\n      clearErrors()\r\n    }\r\n    //  eslint-disable-next-line\r\n  }, [error, isAuthenticated])\r\n\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const { email, password } = user\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (email === '' || password === '') {\r\n      setAlert('Please fill in all the fields', 'danger')\r\n    } else {\r\n      login({ email, password })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Login</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={onChange} />\r\n        </div>\r\n        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\n\r\nconst Alerts = () => {\r\n  const alertContext = useContext(AlertContext)\r\n\r\n  return (\r\n    alertContext.alerts.length > 0 &&\r\n    alertContext.alerts.map((alert) => (\r\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n        <i className=\"fas fa-info-circle\"></i> {alert.msg}\r\n      </div>\r\n    ))\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React, { useContext } from 'react'\r\n\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const authContext = useContext(AuthContext)\r\n  const { isAuthenticated, loading } = authContext\r\n  return <Route {...rest} render={(props) => (!isAuthenticated && !loading ? <Redirect to=\"/login\" /> : <Component {...props} />)} />\r\n}\r\n\r\nexport default PrivateRoute\r\n","import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      }\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      }\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        // contacts: state.contacts.map((element) => {\r\n        //   if (element.id === action.payload.id) {\r\n        //     element.name = action.payload.name;\r\n        //     element.email = action.payload.email;\r\n        //     element.phone = action.payload.phone;\r\n        //     element.type = action.payload.type;\r\n        //   }\r\n        //   return element;\r\n        // }),\r\n        contacts: state.contacts.map((element) => (element._id === action.payload._id ? action.payload : element)),\r\n        loading: false,\r\n      }\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      }\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((element) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi')\r\n          return element.name.match(regex) || element.email.match(regex)\r\n        }),\r\n      }\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      }\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      }\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((element) => element._id !== action.payload),\r\n        loading: false,\r\n      }\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n        loading: false,\r\n      }\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_CONTACTS = 'GET_CONTACTS'\r\nexport const CLEAR_CONTACTS = 'CLEAR_CONTACTS'\r\n\r\nexport const ADD_CONTACT = 'ADD_CONTACT'\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\r\nexport const SET_CURRENT = 'SET_CURRENT'\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT'\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT'\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS'\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const CONTACT_ERROR = 'CONTACT_ERROR'\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\r\n","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport ContactContext from './contactContext'\r\nimport ContactReducer from './contactReducer'\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n} from '../types'\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState)\r\n\r\n  // Add Contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config)\r\n\r\n      dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/contacts')\r\n\r\n      dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Update Contact\r\n  const updateContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config)\r\n\r\n      dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: res.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Delete Contact\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      const res = await axios.delete(`/api/contacts/${id}`)\r\n\r\n      dispatch({\r\n        type: DELETE_CONTACT,\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Clear Contacts\r\n  const clearContacts = () => {\r\n    dispatch({\r\n      type: CLEAR_CONTACTS,\r\n    })\r\n  }\r\n\r\n  // Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({\r\n      type: SET_CURRENT,\r\n      payload: contact,\r\n    })\r\n  }\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT,\r\n    })\r\n  }\r\n\r\n  // Filter Contacts\r\n  const filterContacts = (text) => {\r\n    dispatch({\r\n      type: FILTER_CONTACTS,\r\n      payload: text,\r\n    })\r\n  }\r\n\r\n  const clearFilter = () => {\r\n    dispatch({\r\n      type: CLEAR_FILTER,\r\n    })\r\n  }\r\n\r\n  // CLear Filter\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n\r\n        getContacts,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n        clearContacts,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ContactState\r\n","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types'\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token)\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      }\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token')\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      }\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token']\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport AuthContext from './authContext'\r\nimport authReducer from './authReducer'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types'\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState)\r\n\r\n  // Load Contact\r\n  const loadUser = async () => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get('/api/auth')\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Register User\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config)\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      })\r\n\r\n      loadUser()\r\n    } catch (error) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: error.response.data.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Login User\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/auth', formData, config)\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      })\r\n\r\n      loadUser()\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: error.response.data.msg,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    })\r\n  }\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => {\r\n    dispatch({\r\n      type: CLEAR_ERRORS,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n\r\n        loadUser,\r\n        register,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthState\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types'\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload]\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport AlertContext from './alertContext'\r\nimport alertReducer from './alertReducer'\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types'\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = []\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState)\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuid()\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type, id },\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id,\r\n      })\r\n    }, timeout)\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AlertState\r\n","import React, { Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Alerts from './components/layout/Alerts'\nimport PrivateRoute from './components/routing/PrivateRoute'\n\nimport ContactState from './context/contact/ContactState'\nimport AuthState from './context/auth/AuthState'\nimport AlertState from './context/alert/AlertState'\n\nimport setAuthToken from './utils/setAuthToken'\n\nimport './App.css'\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nfunction App() {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <div className=\"container\">\n                <Alerts />\n                <Switch>\n                  <PrivateRoute exact path=\"/\" component={Home} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route exact path=\"/register\" component={Register} />\n                  <Route exact path=\"/Login\" component={Login} />\n                </Switch>\n              </div>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </ContactState>\n    </AuthState>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}